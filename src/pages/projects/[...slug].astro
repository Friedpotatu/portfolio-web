---
import { getCollection, getEntry, render } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { Image } from 'astro:assets';
import Gallery from '../../components/Gallery.astro';
import GitHub from '../../components/icons/GitHub.astro';
import ThemeToggle from '../../components/ThemeToggle.astro';
import { getTechColor } from '../../utils/techColors';

export async function getStaticPaths() {
    const projects = await getCollection('projects');
    return projects.map((project) => ({
        params: { slug: project.id },
        props: { project }
    }));
}

const { project } = Astro.props;

// Obtener la entrada específica y renderizarla
const entry = await getEntry('projects', project.id);
if (!entry) {
    throw new Error(`No se pudo encontrar el proyecto: ${project.id}`);
}
const { Content, headings } = await render(entry);
---

<Layout
    title={`${project.data.title} - Portfolio Nicolás Pavez`}
    description={project.data.description}
    image={project.data.image}
    type="article"
>
    <ThemeToggle />
    <div class="min-h-screen flex flex-col p-4">
        <div class="max-w-4xl mx-auto w-full">
            <!-- Botón de regreso -->
            <div class="mb-8">
                <button 
                    id="back-btn"
                    class="inline-flex items-center gap-2 text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 transition-colors cursor-pointer"
                >
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                    </svg>
                    Volver a Proyectos
                </button>
            </div>

            <!-- Header del proyecto -->
            <div class="bg-white dark:bg-neutral-800 rounded-2xl border border-neutral-200 dark:border-neutral-700 overflow-hidden mb-8">
                <div class="relative h-64 md:h-80">
                    {project.data.image.endsWith('.mkv') || project.data.image.endsWith('.mp4') || project.data.image.endsWith('.webm') ? (
                        <video
                            src={project.data.image}
                            autoplay
                            muted
                            loop
                            playsinline
                            class="w-full h-full object-cover"
                        />
                    ) : (
                        <Image 
                            src={project.data.image}
                            alt={project.data.title}
                            loading="eager"
                            class="w-full h-full object-cover"
                            width={800}
                            height={400}
                        />
                    )}
                    <div class="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent"></div>
                    <div class="absolute bottom-6 left-6 text-white">
                        <h1 class="text-3xl md:text-4xl font-bold mb-2">{project.data.title}</h1>
                        <p class="text-lg text-gray-200">{project.data.description}</p>
                    </div>
                    {project.data.featured && (
                        <div class="absolute top-6 right-6">
                            <span class="px-3 py-1 bg-yellow-500 text-white text-sm font-semibold rounded-full">
                                Proyecto Destacado
                            </span>
                        </div>
                    )}
                </div>
            </div>

            <!-- Tecnologías y botones de acción -->
            <div class="bg-white dark:bg-neutral-800 rounded-2xl border border-neutral-200 dark:border-neutral-700 p-6 mb-8">
                <div class="flex flex-col md:flex-row md:items-center justify-between gap-4">
                    <div>
                        <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-3">Tecnologías utilizadas</h3>
                        <div class="flex flex-wrap gap-2">
                            {project.data.technologies.map((tech) => (
                                <span class={`px-2 py-1 rounded text-xs font-medium ${getTechColor(tech)}`}>
                                    {tech}
                                </span>
                            ))}
                        </div>
                    </div>
                    
                    <div class="flex gap-3 shrink-0">
                        {project.data.demo && (
                            <a 
                                href={project.data.demo}
                                target="_blank"
                                rel="noopener noreferrer"
                                class="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg text-sm font-medium transition-colors"
                            >
                                Ver Demo
                            </a>
                        )}
                        
                        {project.data.github ? (
                            <a
                                href={project.data.github}
                                target="_blank"
                                rel="noopener noreferrer"
                                class="flex items-center gap-x-2 px-4 py-2 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:border-blue-600 hover:text-blue-600 dark:hover:border-blue-400 dark:hover:text-blue-400 rounded-lg text-sm font-medium transition-colors"
                            >
                                <GitHub class="w-4 h-4" />
                                GitHub
                            </a>
                        ) : (
                            <button
                                disabled
                                class="flex items-center gap-x-2 px-4 py-2 border border-gray-200 dark:border-gray-700 text-gray-400 dark:text-gray-500 bg-gray-50 dark:bg-gray-800 rounded-lg text-sm font-medium cursor-not-allowed opacity-60"
                            >
                                <GitHub class="w-4 h-4" />
                                Privado
                            </button>
                        )}
                    </div>
                </div>
            </div>

            <!-- Contenido del proyecto -->
            <div class="bg-white dark:bg-neutral-800 rounded-2xl border border-neutral-200 dark:border-neutral-700 p-6 mb-8">
                <div class="prose dark:prose-invert max-w-none prose-headings:text-gray-900 dark:prose-headings:text-white prose-p:text-gray-600 dark:prose-p:text-gray-300">
                    <Content />
                </div>
            </div>

            <!-- Galería de imágenes -->
            {project.data.gallery && project.data.galleryImages && project.data.galleryImages.length > 0 && (
                <div class="bg-white dark:bg-neutral-800 rounded-2xl border border-neutral-200 dark:border-neutral-700 p-6">
                    <h3 class="text-2xl font-bold text-gray-900 dark:text-white mb-6">Galería del proyecto</h3>
                    <Gallery 
                        images={project.data.galleryImages}
                        projectTitle={project.data.title}
                    />
                </div>
            )}
        </div>
    </div>

    <script>
        // Manejar navegación del botón "Volver a Proyectos"
        document.addEventListener('astro:page-load', () => {
            const backBtn = document.getElementById('back-btn');
            
            backBtn?.addEventListener('click', async () => {
                const { navigate } = await import("astro:transitions/client");
                navigate('/#projects');
            });
        });
    </script>
</Layout>