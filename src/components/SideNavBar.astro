---
import Home from "./icons/Home.astro"
import Experience from "./icons/Experience.astro"
import Projects from "./icons/Project.astro"
import About from "./icons/About.astro"
---

<nav class="side-navbar hidden sm:block fixed right-2 top-1/2 z-50 transform -translate-y-1/2">
  <div class="navbar-container bg-gray-100 dark:bg-neutral-800 rounded-3xl transition-all duration-300 hover:px-1">
    
    <!-- Presentación -->
    <a aria-label="Presentación" href="#home" class="nav-item group flex items-center py-3 px-2 rounded-xl transition-all duration-300 hover:px-1" data-section="home">
      <div class="icon-container flex items-center justify-center w-8 h-8">
        <Home />
      </div>
    </a>

    <!-- Experiencia -->
    <a aria-label="Experiencia" href="#experience" class="nav-item group flex items-center py-3 px-2 rounded-xl transition-all duration-300 hover:px-1" data-section="experience">
      <div class="icon-container flex items-center justify-center w-8 h-8">
        <Experience />
      </div>
    </a>

    <!-- Proyectos -->
    <a aria-label="Proyectos" href="#projects" class="nav-item group flex items-center py-3 px-2 rounded-xl transition-all duration-300 hover:px-1" data-section="projects">
      <div class="icon-container flex items-center justify-center w-8 h-8">
        <Projects />
      </div>
    </a>

    <!-- Sobre mí -->
    <a aria-label="Sobre mí" href="#about" class="nav-item group flex items-center py-3 px-2 rounded-xl transition-all duration-300 hover:px-1" data-section="about">
      <div class="icon-container flex items-center justify-center w-8 h-8">
        <About />
      </div>
    </a>
  </div>
</nav>

<script>
  // Configuración de colores para cada sección
  const sectionColors: Record<string, { color: string; darkColor: string }> = {
    home: { color: 'text-blue-600', darkColor: 'dark:text-blue-400' },
    experience: { color: 'text-green-600', darkColor: 'dark:text-green-400' },
    projects: { color: 'text-purple-600', darkColor: 'dark:text-purple-400' },
    about: { color: 'text-orange-600', darkColor: 'dark:text-orange-400' }
  };

  // Función para actualizar el estado activo
  function updateActiveSection(activeSection: string): void {
    // Limpiar todos los iconos
    document.querySelectorAll('.nav-item svg').forEach(svg => {
      svg.classList.remove(
        'text-blue-600', 'dark:text-blue-400',
        'text-green-600', 'dark:text-green-400', 
        'text-purple-600', 'dark:text-purple-400',
        'text-orange-600', 'dark:text-orange-400'
      );
      svg.classList.add('text-gray-800', 'dark:text-gray-200');
    });

    // Aplicar color al icono activo
    const activeNavItem = document.querySelector(`[data-section="${activeSection}"]`);
    if (activeNavItem) {
      const svg = activeNavItem.querySelector('svg');
      if (svg && sectionColors[activeSection]) {
        svg.classList.remove('text-gray-800', 'dark:text-gray-200');
        svg.classList.add(sectionColors[activeSection].color, sectionColors[activeSection].darkColor);
      }
    }
  }

  // Configurar Intersection Observer
  function setupSectionObserver(): void {
    const sections = document.querySelectorAll('section[id]');
    
    if (sections.length === 0) return;

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            updateActiveSection(entry.target.id);
          }
        });
      },
      {
        rootMargin: '-20% 0px -20% 0px',
        threshold: 0.3
      }
    );

    sections.forEach(section => {
      observer.observe(section);
    });
  }

  // Inicializar cuando el DOM esté listo
  document.addEventListener('DOMContentLoaded', () => {
    setupSectionObserver();
    
    // Establecer la sección inicial como activa
    updateActiveSection('home');
  });

  // Manejar navegación manual
  document.addEventListener('click', (e) => {
    const target = e.target as HTMLElement;
    const navItem = target.closest('.nav-item') as HTMLAnchorElement;
    
    if (navItem) {
      const section = navItem.getAttribute('data-section');
      if (section) {
        // Pequeño delay para permitir que el scroll termine
        setTimeout(() => {
          updateActiveSection(section);
        }, 100);
      }
    }
  });
</script>